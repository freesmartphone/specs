<?xml version="1.0"?>
<node name="/" xmlns:fso="http://www.freesmartphone.org/schemas/DBusSpecExtension" xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd" doc:id="freesmartphone-device-audio-interface">

<doc:doc>
  <doc:summary>freesmartphone.org Audio Interface</doc:summary>
  <doc:version>0.9.5</doc:version>
  <doc:source>git.freesmartphone.org</doc:source>
  <doc:maintainer>Michael 'Mickey' Lauer</doc:maintainer>
</doc:doc>

<interface name="org.freesmartphone.Device.Audio">

  <doc:doc>
    <doc:para>
      This interface provides access to notification sounds, sound scenarios, and mixer controls.
    </doc:para>
  </doc:doc>

  <!-- INFORMATIONAL -->

  <method name="GetInfo">
    <annotation name="org.freedesktop.DBus.GLib.Async" value="true" />
    <doc:doc>
      <doc:description>
        Returns information about the audio hardware.
      </doc:description>
    </doc:doc>
    <arg direction="out" type="a{sv}" name="info">
      <doc:doc>
        <doc:summary>
          Information about the audio hardware. Expected tuples:
          [ul]
            [li]"name":string. The name of the audio device.[/li]
            [li]"formats":list(string). The supported audio file formats.[/li]
            [li]"scenario":string. The current audio scenario.[/li]
            [li]"scenarios":list(string). The available audio scenarios.[/li]
          [/ul]
        </doc:summary>
      </doc:doc>
    </arg>
  </method>

  <method name="GetAvailableScenarios">
    <annotation name="org.freedesktop.DBus.GLib.Async" value="true" />
    <doc:doc>
      <doc:description>
        Returns a list of supported audio scenarios.
      </doc:description>
    </doc:doc>
    <arg direction="out" type="as" name="scenarios">
      <doc:doc>
        <doc:summary>
          The supported audio scenarios.
        </doc:summary>
      </doc:doc>
    </arg>
  </method>

  <!-- SIMPLE SOUND API -->

  <method name="PlaySound">
    <annotation name="org.freedesktop.DBus.GLib.Async" value="true" />
    <doc:doc>
      <doc:description>
        Play a sound resource.
      </doc:description>
    </doc:doc>
    <arg direction="in" type="s" name="name">
      <doc:doc>
        <doc:summary>
          The identification of the sound resource. Will be treated as filename, if no schema is given.
          Format-specific options may be supplied by appending multiple ";foo=bar" statements to the
          filename. Player engines that do not support these options should ignore them.
        </doc:summary>
      </doc:doc>
    </arg>
    <arg direction="in" type="i" name="loop">
      <doc:doc>
        <doc:summary>
          Loop. Set this to 1, if you want the sound resource to be restarted, once it ends. 0, otherwise.
        </doc:summary>
      </doc:doc>
    </arg>
    <arg direction="in" type="i" name="length">
      <doc:doc>
        <doc:summary>
          Length in seconds. Set this to anything other than 0 if you want to override the length of the sound resource.
          Note that some audio resources have no concept of length or do know when the sound resource ends.
          In these cases, you have to provide a reasonable length value or the sound will play endlessly.
        </doc:summary>
      </doc:doc>
    </arg>
    <fso:throws type="org.freesmartphone.Device.Audio" />
    <fso:throws type="org.freesmartphone" />
  </method>

  <method name="StopSound">
    <annotation name="org.freedesktop.DBus.GLib.Async" value="true" />
    <doc:doc>
      <doc:description>
        Stop playing a sound resource.
      </doc:description>
    </doc:doc>
    <arg direction="in" type="s" name="name">
      <doc:doc>
        <doc:summary>
          The identification of the sound resource. Will be treated as filename, if no schema is given.
        </doc:summary>
      </doc:doc>
    </arg>
    <fso:throws type="org.freesmartphone" />
  </method>

  <method name="StopAllSounds">
    <annotation name="org.freedesktop.DBus.GLib.Async" value="true" />
    <doc:doc>
      <doc:description>
        Stop all currently played sound resources.
      </doc:description>
    </doc:doc>
  </method>

  <signal name="SoundStatus">
    <doc:doc>
      <doc:description>
        Sent whenever a sound has been started or stopped.
      </doc:description>
    </doc:doc>
    <arg type="s" name="id">
      <doc:doc>
        <doc:summary>
          The identification of sound resource that changed its status.
        </doc:summary>
      </doc:doc>
    </arg>
    <arg type="s" name="status" fso:type="org.freesmartphone.Device.SoundState">
      <doc:doc>
        <doc:summary>
          The new status for the sound resource.
        </doc:summary>
      </doc:doc>
    </arg>
    <arg type="a{sv}" name="properties">
      <doc:doc>
        <doc:summary>
          An array of property values. Note that properties are optional. Expected tuples are:
          [ul]
            [li]...to be defined...[/li]
          [/ul]
        </doc:summary>
      </doc:doc>
    </arg>
  </signal>

  <!-- AUDIO SCENARIO API -->

  <method name="GetScenario">
    <annotation name="org.freedesktop.DBus.GLib.Async" value="true" />
    <doc:doc>
      <doc:description>
        Get the current audio scenario.
      </doc:description>
    </doc:doc>
    <arg direction="out" type="s" name="scenario">
      <doc:doc>
        <doc:summary>
          The name of the scenario.
        </doc:summary>
      </doc:doc>
    </arg>
  </method>

  <method name="SetScenario">
    <annotation name="org.freedesktop.DBus.GLib.Async" value="true" />
    <doc:doc>
      <doc:description>
        Set a new audio scenario.
      </doc:description>
    </doc:doc>
    <arg direction="in" type="s" name="scenario">
      <doc:doc>
        <doc:summary>
          The name of the scenario.
        </doc:summary>
      </doc:doc>
    </arg>
    <fso:throws type="org.freesmartphone" />
  </method>

  <method name="PushScenario">
    <annotation name="org.freedesktop.DBus.GLib.Async" value="true" />
    <doc:doc>
      <doc:description>
        Push a new audio scenario onto the stack and active it.
      </doc:description>
    </doc:doc>
    <arg direction="in" type="s" name="scenario">
      <doc:doc>
        <doc:summary>
          The new active scenario.
        </doc:summary>
      </doc:doc>
    </arg>
    <fso:throws type="org.freesmartphone" />
  </method>

  <method name="PullScenario">
    <annotation name="org.freedesktop.DBus.GLib.Async" value="true" />
    <doc:doc>
      <doc:description>
        Pull an audio scenario from the stack and activate the next one.
      </doc:description>
    </doc:doc>
    <arg direction="out" type="s" name="scenario">
      <doc:doc>
        <doc:summary>
          The new active scenario.
        </doc:summary>
      </doc:doc>
    </arg>
    <fso:throws type="org.freesmartphone.Device.Audio" />
  </method>

  <method name="SaveScenario">
    <annotation name="org.freedesktop.DBus.GLib.Async" value="true" />
    <doc:doc>
      <doc:description>
        Save the current scenario as a file.
      </doc:description>
    </doc:doc>
    <arg direction="in" type="s" name="scenario">
      <doc:doc>
        <doc:summary>
          The name of the scenario.
        </doc:summary>
      </doc:doc>
    </arg>
  </method>

  <signal name="Scenario">
    <doc:doc>
      <doc:description>
        Sent whenever there is a change of the global sound scenario.
      </doc:description>
    </doc:doc>
    <arg type="s" name="scenario">
      <doc:doc>
        <doc:summary>
          The scenario that is now active.
        </doc:summary>
      </doc:doc>
    </arg>
    <arg type="s" name="reason">
      <doc:doc>
        <doc:summary>
          The reason for this change. Expected reasons are:
          [ul]
            [li]...to be defined...[/li]
          [/ul]
        </doc:summary>
      </doc:doc>
    </arg>
  </signal>

</interface>

<fso:errordomain name="org.freesmartphone.Device.Audio" fso:no-container="true">
  <error name="UnknownFormat">
    <doc:doc>
      <doc:description>
        Raised, if the audio format is not supported.
      </doc:description>
    </doc:doc>
  </error>

  <error name="PlayerError">
    <doc:doc>
      <doc:description>
        Raised, if the player emits an (internal) error.
      </doc:description>
    </doc:doc>
  </error>

  <error name="NotPlaying">
    <doc:doc>
      <doc:description>
        Raised, if the audio file is not playing.
      </doc:description>
    </doc:doc>
  </error>

  <error name="AlreadyPlaying">
    <doc:doc>
      <doc:description>
        Raised, if the audio file is already playing.
      </doc:description>
    </doc:doc>
  </error>

  <error name="ScenarioInvalid">
    <doc:doc>
      <doc:description>
        Raised, if the audio scenario can not be activated.
      </doc:description>
    </doc:doc>
  </error>

  <error name="ScenarioStackUnderflow">
    <doc:doc>
      <doc:description>
        Raised, if there is no more scenario to pull from the stack.
      </doc:description>
    </doc:doc>
  </error>

  <error name="DeviceFailed">
    <doc:doc>
      <doc:description>
        Raised, if the audio device reported a problem.
      </doc:description>
    </doc:doc>
  </error>
</fso:errordomain>

<fso:enumeration name="org.freesmartphone.Device.SoundState" type="s">
  <fso:member name="playing" value="playing"/>
  <fso:member name="stopped" value="stopped"/>
</fso:enumeration>

</node>
