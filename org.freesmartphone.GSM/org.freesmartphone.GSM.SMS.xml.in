<?xml version="1.0"?>
<node name="/" xmlns:fso="http://www.freesmartphone.org/schemas/DBusSpecExtension" xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd" doc:id="freesmartphone-gsm-sms-interface">

<doc:doc>
  <doc:summary>freesmartphone.org GSM SMS Interface</doc:summary>
  <doc:version>0.5.0</doc:version>
</doc:doc>

<interface name="org.freesmartphone.GSM.SMS">

  <doc:doc>
    <doc:para>
      The SMS interface is used to send and signal incoming short messages (SMS) directly, i.e.
      as opposed to using the SIM interface which always buffers short messages on the SIM
      after receiving and before sending.
    </doc:para>
  </doc:doc>

<!-- Not clear whether we want to have this
  <method name="GetServiceBearer">
    <annotation name="org.freedesktop.DBus.GLib.Async" value="true" />
    <arg type="s" name="mode" direction="out" />
    <fso:throws type="org.freesmartphone.GSM" />
    <fso:throws type="org.freesmartphone" />
  </method>

  <method name="SetServiceBearer">
    <annotation name="org.freedesktop.DBus.GLib.Async" value="true" />
    <arg type="s" name="mode" direction="in" />
    <fso:throws type="org.freesmartphone.GSM" />
    <fso:throws type="org.freesmartphone" />
  </method>
  -->

  <method name="SendTextMessage">
    <annotation name="org.freedesktop.DBus.GLib.Async" value="true" />
    <doc:doc>
      <doc:description>Sends a text message via the GSM Short Message Service (SMS)</doc:description>
      <doc:inote>
        Text messages can be of unlimited length. They might get fragmented by the underlying transport layers though.
      </doc:inote>
    </doc:doc>
    <arg type="s" name="recipient_number" direction="in">
      <doc:doc>
        <doc:summary>The number of the recipient.</doc:summary>
      </doc:doc>
    </arg>
    <arg type="s" name="contents" direction="in">
      <doc:doc>
        <doc:summary>The contents of the message.</doc:summary>
      </doc:doc>
    </arg>
    <arg type="b" name="want_report" direction="in">
      <doc:doc>
        <doc:summary>
        If true, status reports (message receipts) will be sent by the SMSC, delivered via the
        org.freesmartphone.GSM.SMS.IncomingMessageReceipt signal.
        </doc:summary>
      </doc:doc>
    </arg>
    <arg type="i" name="transaction_index" direction="out">
      <doc:doc>
        <doc:summary>
        The given transaction index for this message. This is the message-reference number of this message.
        </doc:summary>
      </doc:doc>
    </arg>
    <arg type="s" name="timestamp" direction="out">
      <doc:doc>
        <doc:summary>
        The timestamp this message was received by the SMSC.
        </doc:summary>
      </doc:doc>
    </arg>
    <fso:throws type="org.freesmartphone.GSM" />
    <fso:throws type="org.freesmartphone" />
  </method>

  <method name="SendMessage">
    <annotation name="org.freedesktop.DBus.GLib.Async" value="true" />
    <doc:doc>
      <doc:description>Sends a message via the GSM Short Message Service (SMS)</doc:description>
      <doc:inote>
        This maps to the GSM 07.05 command +CMGS=..., see 3GPP TS 07.05 Chapter 3.5.1 (text mode)  and 4.3 (pdu mode).
      </doc:inote>
    </doc:doc>
    <arg type="s" name="recipient_number" direction="in">
      <doc:doc>
        <doc:summary>The number of the recipient.</doc:summary>
      </doc:doc>
    </arg>
    <arg type="s" name="contents" direction="in">
      <doc:doc>
        <doc:summary>The contents of the message.</doc:summary>
      </doc:doc>
    </arg>
    <arg type="a{sv}" name="properties" direction="in">
      <doc:doc>
        <doc:summary>Additional properties of the message.
          Valid properties are:
          [ul]
            [li](string:alphabet) = Encoding of the short message, must be one of "gsm_default", "usc2" or "binary"[/li]
            [li](bool:reject-duplicates) = If true the SMSC shall reject messages with the same message-reference as this one (default false)[/li]
            [li](bool:reply-path) = If true requests a reply path, see 3GPP TS 03.40 Annex D for more information.[/li]
            [li](bool:status-report-request) = If true the SMSC will send us reports about the status of our message. These can be received via the org.freesmartphone.GSM.SMS.IncomingMessageReceipt signal.[/li]
            [li](int:message-reference) = Message reference number with which the message can be identified.[/li]
            [li](int:pid) = Numerical representation of the protocol identifier[/li]
            [li](int:message-class) = Numerical representation of the message class[/li]
            [li](a(int):data) = If alphabet is "binary" the userdata is stored in this field[/li]
            [li]Properties for concatenated short messages (CSM):
              [ul]
                [li](int:csm_id) = Id of the csm (messages belonging to the same csm must have the same id),[/li]
                [li](int:csm_num) = Total number of messages in this csm,[/li]
                [li](int:csm_seq) = Number defining the order of the messages in the csm.[/li]
              [/ul]
            [/li]
            [li]Properties for port addressing (similar to UDP ports):
              [ul]
                [li](int:src_port) = Source port this short message comes from,[/li]
                [li](int:dst_port) = Destination port this short message should be routed to,[/li]
                [li](int:port_size) = Either 8 for 8-bit or 16 for 16-bit port addressing.[/li]
              [/ul]
            [/li]
            [li]Properties for message indication:
              [/ul]
                [li](int:message-indication-type) = Type of messages that are waiting,[/li]
                [li](int:message-indication-count) = Number of messages that are waiting.[/li]
              [/ul]
            [/li]
          [/ul]
        </doc:summary>
      </doc:doc>
    </arg>
    <arg type="i" name="transaction_index" direction="out">
      <doc:doc>
        <doc:summary>The given transaction index for this message. This is the message-reference number of this message.</doc:summary>
      </doc:doc>
    </arg>
    <arg type="s" name="timestamp" direction="out">
      <doc:doc>
        <doc:summary>The timestamp this message was received by the SMSC.</doc:summary>
      </doc:doc>
    </arg>
    <fso:throws type="org.freesmartphone.GSM" />
    <fso:throws type="org.freesmartphone" />
  </method>

  <method name="AckMessage">
    <annotation name="org.freedesktop.DBus.GLib.Async" value="true" />
    <doc:doc>
      <doc:description>Acknowledges the receipt of a message via the GSM Short Message Service (SMS). Every message that has been delivered with the IncomingMessage signal needs to be either acked or nacked.</doc:description>
      <doc:inote>
        This maps to the GSM 07.05 command +CNMA=..., see 3GPP TS 07.05 Chapter 3.4.4 (text mode)  and 4.6 (pdu mode).
      </doc:inote>
    </doc:doc>
    <arg type="s" name="contents" direction="in">
      <doc:doc>
        <doc:summary>Optional text to send along with the acknowledgement. Will usually be empty.</doc:summary>
      </doc:doc>
    </arg>
    <arg type="a{sv}" name="properties" direction="in">
      <doc:doc>
        <doc:summary>Additional properties of the message.
          Valid properties are:
          [ul]
            [li](string:alphabet) = Encoding of the short message, must be one of "gsm_default", "usc2" or "binary"[/li]
            [li](int:pid) = Numerical representation of the protocol identifier[/li]
            [li](int:message-class) = Numerical representation of the message class[/li]
            [li](a(int):data) = If alphabet is "binary" the userdata is stored in this field[/li]
            [li]Properties for concatenated short messages (CSM):
              [ul]
                [li](int:csm_id) = Id of the csm (messages belonging to the same csm must have the same id),[/li]
                [li](int:csm_num) = Total number of messages in this csm,[/li]
                [li](int:csm_seq) = Number defining the order of the messages in the csm.[/li]
              [/ul]
            [/li]
            [li]Properties for port addressing (similar to UDP ports):
              [ul]
                [li](int:src_port) = Source port this short message comes from,[/li]
                [li](int:dst_port) = Destination port this short message should be routed to,[/li]
                [li](int:port_size) = Either 8 for 8-bit or 16 for 16-bit port addressing.[/li]
              [/ul]
            [/li]
            [li]Properties for message indication:
              [ul]
                [li](int:message-indication-type) = Type of messages that are waiting,[/li]
                [li](int:message-indication-count) = Number of messages that are waiting.[/li]
              [/ul]
            [/li]
          [/ul]
        </doc:summary>
      </doc:doc>
    </arg>
    <fso:throws type="org.freesmartphone.GSM" />
    <fso:throws type="org.freesmartphone" />
  </method>

  <method name="NackMessage">
    <annotation name="org.freedesktop.DBus.GLib.Async" value="true" />
    <doc:doc>
      <doc:description>Reports that an error has occured during the receipt of a message via the GSM Short Message Service (SMS). Every message that has been delivered with the IncomingMessage signal needs to be either acked or nacked.</doc:description>
      <doc:inote>
        This maps to the GSM 07.05 command +CNMA=..., see 3GPP TS 07.05 Chapter 3.4.4 (text mode)  and 4.6 (pdu mode).
      </doc:inote>
    </doc:doc>
    <arg type="s" name="contents" direction="in">
      <doc:doc>
        <doc:summary>Optional text to send along with the negative acknowledgement. Will usually be empty.</doc:summary>
      </doc:doc>
    </arg>
    <arg type="a{sv}" name="properties" direction="in">
      <doc:doc>
        <doc:summary>Additional properties of the message.
          Valid properties are:
          [ul]
            [li](int:fcs) = Integer representation of the failure cause. If unset it will be 0xff (unspecified error).[/li]
            [li](string:alphabet) = Encoding of the short message, must be one of "gsm_default", "usc2" or "binary"[/li]
            [li](int:pid) = Numerical representation of the protocol identifier[/li]
            [li](int:message-class) = Numerical representation of the message class[/li]
            [li](a(int):data) = If alphabet is "binary" the userdata is stored in this field[/li]
            [li]Properties for concatenated short messages (CSM):
              [ul]
                [li](int:csm_id) = Id of the csm (messages belonging to the same csm must have the same id),[/li]
                [li](int:csm_num) = Total number of messages in this csm,[/li]
                [li](int:csm_seq) = Number defining the order of the messages in the csm.[/li]
              [/ul]
            [/li]
            [li]Properties for port addressing (similar to UDP ports):
              [ul]
                [li](int:src_port) = Source port this short message comes from,[/li]
                [li](int:dst_port) = Destination port this short message should be routed to,[/li]
                [li](int:port_size) = Either 8 for 8-bit or 16 for 16-bit port addressing.[/li]
              [/ul]
            [/li]
            [li]Properties for message indication:
              [ul]
                [li](int:message-indication-type) = Type of messages that are waiting,[/li]
                [li](int:message-indication-count) = Number of messages that are waiting.[/li]
              [/ul]
            [/li]
          [/ul]
        </doc:summary>
      </doc:doc>
    </arg>
    <fso:throws type="org.freesmartphone.GSM" />
    <fso:throws type="org.freesmartphone" />
  </method>

<!-- Does initial sending sometimes fail and we get a delayed response that
     the SMS has been sent? Only then this signal seems useful
  <signal name="MessageSent">
    <arg name="transaction_index" type="i" />
    <arg name="success" type="b" />
    <arg name="reason" type="s" />
  </signal>
  -->

  <signal name="IncomingMessage">
    <doc:doc>
      <doc:description>Sent, when a message has been received. The receipt of a message needs to be either acked or nacked with the org.freesmartphones.GSM.SMS.AckMessage() or org.freesmartphone.GSM.SMS.NackMessage() methods.</doc:description>
      <doc:inote>
      </doc:inote>
    </doc:doc>
    <arg type="s" name="sender_number">
      <doc:doc>
        <doc:summary>The number of the sender.</doc:summary>
      </doc:doc>
    </arg>
    <arg type="s" name="contents">
      <doc:doc>
        <doc:summary>The contents of the message.</doc:summary>
      </doc:doc>
    </arg>
    <arg type="a{sv}" name="properties">
      <doc:doc>
        <doc:summary>Additional properties of the message.
          Valid properties are:
          [ul]
            [li](string:type) = Type of the message, will be "sms-deliver"[/li]
            [li](string:alphabet) = Encoding of the short message, must be one of "gsm_default", "usc2" or "binary"[/li]
            [li](bool:more-messages-to-send) = If true indicates that the SMSC will send more messages.[/li]
            [li](bool:reply-path) = If true indicates that a reply path has been set, see 3GPP TS 03.40 Annex D for more information.[/li]
            [li](bool:status-report-indicator) = If true the sender of this message has requested status reports.[/li]
            [li](int:pid) = Numerical representation of the protocol identifier[/li]
            [li](int:message-class) = Numerical representation of the message class[/li]
            [li](a(int):data) = If alphabet is "binary" the userdata is stored in this field[/li]
            [li](string:timestamp) = A timestamp indicating when the SMSC received the message.
            [li]Properties for concatenated short messages (CSM):
              [ul]
                [li](int:csm_id) = Id of the csm (messages belonging to the same csm must have the same id),[/li]
                [li](int:csm_num) = Total number of messages in this csm,[/li]
                [li](int:csm_seq) = Number defining the order of the messages in the csm.[/li]
              [/ul]
            [/li]
            [li]Properties for port addressing (similar to UDP ports):
              [ul]
                [li](int:src_port) = Source port this short message comes from,[/li]
                [li](int:dst_port) = Destination port this short message should be routed to,[/li]
                [li](int:port_size) = Either 8 for 8-bit or 16 for 16-bit port addressing.[/li]
              [/ul]
            [/li]
            [li]Properties for message indication:
              [ul]
                [li](int:message-indication-type) = Type of messages that are waiting,[/li]
                [li](int:message-indication-count) = Number of messages that are waiting.[/li]
              [/ul]
            [/li]
          [/ul]
        </doc:summary>
      </doc:doc>
    </arg>
  </signal>

  <signal name="IncomingMessageReceipt">
    <doc:doc>
      <doc:description>Sent when a status report for a message has been received. Status reports for messages can be requested by setting the property "status-report-request" to True when sending messages through org.freesmartphone.GSM.SMS.SendMessage.</doc:description>
      <doc:inote>
      </doc:inote>
    </doc:doc>
    <arg type="s" name="sender_number">
      <doc:doc>
        <doc:summary>The number of the sender.</doc:summary>
      </doc:doc>
    </arg>
    <arg type="s" name="contents">
      <doc:doc>
              <doc:summary>Optional contents of the receipt. Will usually be empty.</doc:summary>
      </doc:doc>
    </arg>
    <arg type="a{sv}" name="properties">
      <doc:doc>
        <doc:summary>Additional properties of the message.
          Valid properties are:
          [ul]
            [li](string:type) = Type of the message, will be "sms-status-report"[/li]
            [li](string:alphabet) = Encoding of the short message, must be one of "gsm_default", "usc2" or "binary" if present.[/li]
            [li](bool:more-messages-to-send) = If true indicates that the SMSC will send more messages.[/li]
            [li](bool:status-report-qualifier) = Indicates what triggered this status report, will be one of "sms-submit" or "sms-command".[/li]
            [li](int:pid) = Numerical representation of the protocol identifier[/li]
            [li](int:message-class) = Numerical representation of the message class[/li]
            [li](a(int):data) = If alphabet is "binary" the userdata is stored in this field[/li]
            [li](int:message-reference) = Message reference number of the message the status report is about.[/li]
            [li](string:timestamp) = A timestamp indicating when the SMSC received the original message.[/li]
            [li](string:discharge-time) = A timestamp indicating when the current status change has taken place.[/li]
            [li](int:status) = Integer representation of the status.[/li]
            [li](string:status-message) = A string conveying the meaning of the status.[/li]
            [li]Properties for concatenated short messages (CSM):
              [ul]
                [li](int:csm_id) = Id of the csm (messages belonging to the same csm must have the same id),[/li]
                [li](int:csm_num) = Total number of messages in this csm,[/li]
                [li](int:csm_seq) = Number defining the order of the messages in the csm.[/li]
              [/ul]
            [/li]
            [li]Properties for port addressing (similar to UDP ports):
              [ul]
                [li](int:src_port) = Source port this short message comes from,[/li]
                [li](int:dst_port) = Destination port this short message should be routed to,[/li]
                [li](int:port_size) = Either 8 for 8-bit or 16 for 16-bit port addressing.[/li]
              [/ul]
            [/li]
            [li]Properties for message indication:
              [ul]
                [li](int:message-indication-type) = Type of messages that are waiting,[/li]
                [li](int:message-indication-count) = Number of messages that are waiting.[/li]
              [/ul]
            [/li]
          [/ul]
        </doc:summary>
      </doc:doc>
    </arg>
  </signal>

</interface>
</node>
